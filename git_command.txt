关于git的文件提交
$ git status (显示有变更的文件)
$ git add . (添加当前目录的所有文件到暂存区) // . 表示当前目录 .. 表示上一级目录
$ git commit -m"注释内容" (提交暂存区到仓库区)
$ git commit -am"注释内容" (-a 表示add, 可以把修改和删除的文件自动添加然后提交，但是新增的文件还是需要add)
$ git push  (把当前分支推送到远程，当前分支就是命令里括号里新的显示，它关联的远程分支可以用 git branch -vv看
$ git push origin [local_branch_name]:[remote_branch_name] (push完成命令，通常后面省略，git自动推送关联)

关于git的文件修改
$ git status 显示文件是否修改 (若输入后显示working directory clean则说明当前无需要的提交)
$ git diff   显示文件的具体修改内容

关于git的文件修改版本查看
$ git log 可以查看文件修改的历史记录
$ git log --pretty=oneline 在一行显示一次提交
[会显示commit Author Date 三项内容以及修改]
(commit id:一长串数字为一次提交的唯一哈希值)

关于git的文件版本回退
$ git reset --hard
HEAD :  当前版本，最新的提交
HEAD^:  上一个版本
HEAD^^: 上上一个版本
HEAD~**:往上**个版本 ]
如果不小心回退到过早版本，可以通过版本id进行恢复到“未来”版本
当新版本id找不到时，
$ git reflog (记录每一次命令，命令历史 history)

关于git的远程仓库的建立
# 增加一个新的远程仓库，并命名
$ git remote add [shortname] [url]  (注：shortname自己命名 url 远程git对应网址)
$ git remote -v 查看所有远程仓库
$ git remote show origin 查看远程主机origin所有信息
// github 推荐到网页新建项目，勾上README，然后本地新建个目录, clone下来

关于git分支的切换
$ git branch    (列出本地所有分支)
$ git branch -r (列出远程所有分支)
$ git checkout -b [branch-name] (新建分支)   (相当于 $ git branch dev    $git checkout dev)
$ git push -u origin [branch-name] (将新建分支推送至远程)
$ git branch -vv (查看本地所有分支 和 其关联的上游分支)
$ git checkout - (切换至上一分支)
$ git checkout  [branch-name] (切换至指定分支)
$ git branch -d [branch-name] (删除本地分支)
$ git push origin :[branch-name] (删除远程分支，原理是推送一个空覆盖掉远程分支)
$ ls (查看当前目录下的文件 linux命令)

关于git远程文件下载到本地
$ git pull  下载远程对应分支到本地

关于git的自带帮助查看
$ git [command_name] --help
eg.:  git push --help

关于分支的merge
//TO-DO

------------------------
[vocabulary]
status  :状态
commit  :提交
log     :日志
reset   :复位
reflog  :引用日志   // reference log 
remote  :远程
view    :查看
upstream:上游
